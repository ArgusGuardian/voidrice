#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (üîå for plugged up, üîã for discharging on battery, etc.).

case $BLOCK_BUTTON in
# 	3) notify-send "üîã Battery module" "üîã: discharging
# üõë: not charging
# ‚ôª: stagnant charge
# üîå: charging
# ‚ö°: charged
# ‚ùó: battery very low!
# - Scroll to change adjust xbacklight." ;;
# 	4) xbacklight -inc 10 ;;
# 	5) xbacklight -dec 10 ;;
# 	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	case "$(cat "$battery/status" 2>&1)" in
		"Full") status="Û±ü¢ " ;;
		"Discharging") status="Û∞Åπ " ;;
		"Charging") status="Û∞ÇÑ " ;;
		"Not charging") status="Û∞ÇÉ " ;;
		"Unknown") status="Û±ß• " ;;
		*) exit 1 ;;
	esac

	capacity="$(cat "$battery/capacity" 2>&1)"

	# Will make a warn variable if discharging and low
	[ "$status" = "Û∞Åπ " ] && [ "$capacity" -le 20 ] && warn="‚ùó"
	# Determine emoji based on battery level
	if [ "$capacity" -ge 90 ]; then
		icon="Û∞Åπ "
	elif [ "$capacity" -ge 60 ]; then
		icon="Û∞ÇÅ "
	elif [ "$capacity" -ge 40 ]; then
		icon="Û∞Åæ "
	elif [ "$capacity" -ge 20 ]; then
		icon="Û∞Åº "
	else
		icon="Û∞Å∫ "
	fi
	
# Prints the info
if [ "$status" = "Û∞Åπ " ]; then
		
		if [ "$capacity" = "20" ]; then
			notify-send --urgency=critical -t -i 10000 "Low Battery!
			20% Battery remaining"
			fi

    if [ -n "$warn" ]; then
        echo ^c#FF0000^"$icon$capacity%"; unset warn
    else
        echo ^c#9ccfd8^"$icon$capacity%"
    fi
else
    echo ^c#9ccfd8^"$status$capacity%"
fi

done && printf "\\n"
